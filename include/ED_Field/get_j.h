#ifndef _GET_J_H_
#define _GET_J_H_

#include <complex>
#include <string>
#include <vector>


//===============================================================================================
//-----------Подсчет токов в точках коллокации и запись токов, разложенных по базису-------------
//===============================================================================================
/**
 * Формирование токов на ячеках с помощью локальных базисов:
 *                      j(sigma_i) = j_i^1 * tau_i^1 + j_i^1 * tau_i^1
 * Параметры:
 *      tau[num_frm][2][3] - набор координат локальных базисов(2 вектора) ячеек
 *      b[num_frm] - коэффициенты системы, ответ решения СЛАУ
 *      j_vec[num_frm][3] - токи, результат
 */

void  get_j_basis(const std::vector<double[2][3]> &tau,
        const std::complex<double>* b,
        std::vector<std::complex<double>[3]> &j_vec);




//============================================================================================================
//-------------------------Дополнительная функция считывания готовых токов------------------------------------
//============================================================================================================
/**
 * Считывание токов на ячейках из фала
 * Параметры:
 *      filename_real - файл с реальной частью всех токов. Вектора по 3 числа 
 *      filename_image - файл с мнимой частью всех токов. Вектора по 3 числа
 *      j_vec[num_frm][3] - результат
 */

void get_j_from_files(const std::string &filename_real, const std::string &filename_image,
        std::vector<std::complex<double>[3]> &j_vec);

#endif // _GET_J_H_
