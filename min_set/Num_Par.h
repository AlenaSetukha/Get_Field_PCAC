#ifndef _NUM_PAR_H_
#define _NUM_PAR_H_

#include <string>
//===============================================================================================
//-----------------------Класс численных параметров задачи---------------------------------------
//===============================================================================================
/**
 * Поля:
 *      eps - точность вычисления интегралов
 *      rs - радиус сглаживания для интеграла по ячейке
 *      rs_seg - радиус сглаживания для интеграла по отрезку
 *      n_start_seg - стартовое разбиение на отрезке
 *      n_start - стартовое разбиение на ячейке
 *      p_max - предельное разбиение на ячейке
 *      p_max_seg - предельное разбиение на отрезке
 * Дополнительно:
 *      k - число шагов по времени(если есть)
 *      T - временной отрезок(если есть)
 *      dt - шаг по времени(если есть)
 *      kappa - параметр задачи(дополнительный)
 *      M - параметр задачи(дополнительный)
 * Радиус сглаживания может подаваться в долях от каждой ячейки/шага сетки,
 * в зависимости от применимости.
 */

class Num_Par {
public:
    double eps, rs, rs_seg;
    int n_start_seg, n_start, p_max, p_max_seg, k;
    double T, dt;
    double kappa, M;

    Num_Par() = default;
    Num_Par(const std::string &filename);
    Num_Par(const double eps_in, const double rs_in, const double rs_seg_in,
            const int n_start_in, const int n_start_seg_in, const int p_max_in,
            const int p_max_seg_in);
    Num_Par(const Num_Par& obj);
    ~Num_Par() = default;
};
#endif // _NUM_PAR_H_
